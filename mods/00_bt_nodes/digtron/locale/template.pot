# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-02-26 13:42-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#: awards.lua:169
msgid "Deep Blue Digtron"
msgstr ""

#: awards.lua:170
msgid "Encounter water while operating a Digtron."
msgstr ""

#: awards.lua:176
msgid "Digtrons of Fire"
msgstr ""

#: awards.lua:177
msgid "Encounter lava while operating a Digtron."
msgstr ""

#: awards.lua:183
msgid "Bigtron"
msgstr ""

#: awards.lua:184
msgid "Operate a Digtron with 10 or more component blocks."
msgstr ""

#: awards.lua:190
msgid "Really Bigtron"
msgstr ""

#: awards.lua:191
msgid "Operate a Digtron with 100 or more component blocks."
msgstr ""

#: awards.lua:197
msgid "Buildtron"
msgstr ""

#: awards.lua:198
msgid "Operate a Digtron with 25 or more builder modules."
msgstr ""

#: awards.lua:204
msgid "Digging Leviathan"
msgstr ""

#: awards.lua:205
msgid "Operate a Digtron with 25 or more digger heads."
msgstr ""

#: awards.lua:211
msgid "Digtron In The Sky"
msgstr ""

#: awards.lua:212
msgid "Operate a Digtron above 1000m elevation"
msgstr ""

#: awards.lua:218
msgid "Digtron High"
msgstr ""

#: awards.lua:219
msgid "Operate a Digtron above 100m elevation"
msgstr ""

#: awards.lua:225
msgid "Scratching the Surface"
msgstr ""

#: awards.lua:226
msgid "Operate a Digtron 100m underground"
msgstr ""

#: awards.lua:232
msgid "Digging Deeper"
msgstr ""

#: awards.lua:233
msgid "Operate a Digtron 1,000m underground"
msgstr ""

#: awards.lua:239
msgid "More Than a Mile"
msgstr ""

#: awards.lua:240
msgid "Operate a Digtron 2,000m underground"
msgstr ""

#: awards.lua:246
msgid "Digging Below Plausibility"
msgstr ""

#: awards.lua:247
msgid ""
"The deepest mine in the world is only 3.9 km deep, you operated a Digtron "
"below 4km"
msgstr ""

#: awards.lua:253
msgid "Double Depth"
msgstr ""

#: awards.lua:254
msgid "Operate a Digtron 8,000m underground"
msgstr ""

#: awards.lua:260
msgid "Halfway to the Core"
msgstr ""

#: awards.lua:261
msgid "Operate a Digtron 16,000m underground"
msgstr ""

#: awards.lua:267
msgid "Nowhere To Go But Up"
msgstr ""

#: awards.lua:268
msgid "Operate a Digtron 30,000m underground"
msgstr ""

#: awards.lua:274
msgid "Mese Master"
msgstr ""

#: awards.lua:275
msgid "Mine 100 Mese crystals with a Digtron"
msgstr ""

#: awards.lua:281
msgid "Diamond Vs. Diamond"
msgstr ""

#: awards.lua:282
msgid "Mine 100 diamonds with a Digtron"
msgstr ""

#: awards.lua:288
msgid "Strip Mining"
msgstr ""

#: awards.lua:289
msgid "Excavate 1000 units of dirt with a Digtron"
msgstr ""

#: awards.lua:295
msgid "Digtron Miner"
msgstr ""

#: awards.lua:296
msgid "Excavate 1000 blocks using a Digtron"
msgstr ""

#: awards.lua:302
msgid "Digtron Expert Miner"
msgstr ""

#: awards.lua:303
msgid "Excavate 10,000 blocks using a Digtron"
msgstr ""

#: awards.lua:309
msgid "Digtron Master Miner"
msgstr ""

#: awards.lua:310
msgid "Excavate 100,000 blocks using a Digtron"
msgstr ""

#: awards.lua:316
msgid "DIGTRON MEGAMINER"
msgstr ""

#: awards.lua:317
msgid "Excavate over a million blocks using a Digtron!"
msgstr ""

#: awards.lua:323
msgid "Clear Cutting"
msgstr ""

#: awards.lua:324
msgid "Chop down 1000 units of tree with a Digtron"
msgstr ""

#: awards.lua:330
msgid "Digtron Deforestation"
msgstr ""

#: awards.lua:331
msgid "Chop down 10,000 units of tree with a Digtron"
msgstr ""

#: awards.lua:337
msgid "Lawnmower"
msgstr ""

#: awards.lua:338
msgid "Harvest 1000 units of grass with a Digtron"
msgstr ""

#: awards.lua:344
msgid "Iron Digtron"
msgstr ""

#: awards.lua:345
msgid "Excavate 1000 units of iron ore with a Digtron"
msgstr ""

#: awards.lua:351
msgid "Copper Digtron"
msgstr ""

#: awards.lua:352
msgid "Excavate 1000 units of copper ore with a Digtron"
msgstr ""

#: awards.lua:358
msgid "Coal Digtron"
msgstr ""

#: awards.lua:359
msgid "Excavate 1,000 units if coal with a Digtron"
msgstr ""

#: awards.lua:365
msgid "Bagger 288"
msgstr ""

#: awards.lua:366
msgid "Excavate 10,000 units of coal with a Digtron"
msgstr ""

#: awards.lua:372
msgid "Digtron 49er"
msgstr ""

#: awards.lua:373
msgid "Excavate 100 units of gold with a Digtron"
msgstr ""

#: awards.lua:379
msgid "Constructive Digging"
msgstr ""

#: awards.lua:380
msgid "Build 1,000 blocks with a Digtron"
msgstr ""

#: awards.lua:386
msgid "Highly Constructive Digging"
msgstr ""

#: awards.lua:387
msgid "Build 10,000 blocks with a Digtron"
msgstr ""

#: awards.lua:393
msgid "Digtron Packrat"
msgstr ""

#: awards.lua:394
msgid "Stored 10 or more Digtron blocks in one crate."
msgstr ""

#: awards.lua:400
msgid "Digtron Hoarder"
msgstr ""

#: awards.lua:401
msgid "Stored 100 or more Digtron blocks in one crate."
msgstr ""

#: doc.lua:14
msgid ""
"A crafting component used in the manufacture of all Digtron block types."
msgstr ""

#: doc.lua:15
msgid ""
"Place the Digtron Core in the center of the crafting grid. All Digtron "
"recipes consist of arranging various other materials around the central "
"Digtron Core."
msgstr ""

#: doc.lua:19
msgid ""
"A 'builder' module for a Digtron. By itself it does nothing, but as part of "
"a Digtron it is used to construct user-defined blocks."
msgstr ""

#: doc.lua:20
msgid ""
"A builder head is the most complex component of this system. It has period "
"and offset properties, and also an inventory slot where you \"program\" it "
"by placing an example of the block type that you want it to build.\n"
"\n"
"When the \"Save & Show\" button is clicked the properties for period and "
"offset will be saved, and markers will briefly be shown to indicate where "
"the nearest spots corresponding to those values are. The builder will build "
"its output at those locations provided it is moving along the matching "
"axis.\n"
"\n"
"The \"output\" side of a builder is the side with a black crosshair on it.\n"
"\n"
"Builders also have a \"facing\" setting. If you haven't memorized the "
"meaning of the 24 facing values yet, builder heads have a helpful \"Read & "
"Save\" button to fill this value in for you. Simply build a temporary "
"instance of the block in the output location in front of the builder, adjust "
"it to the orientation you want using the screwdriver tool, and then when you "
"click the \"Read & Save\" button the block's facing will be read and saved.\n"
"\n"
"Note: if more than one builder tries to build into the same space "
"simultaneously, it is not predictable which builder will take priority. One "
"will succeed and the other will fail. You should arrange your builders to "
"avoid this for consistent results."
msgstr ""

#: doc.lua:31
msgid ""
"Stores building materials for use by builder heads and materials dug up by "
"digger heads."
msgstr ""

#: doc.lua:32
msgid ""
"Inventory modules have the same capacity as a chest. They're used both for "
"storing the products of the digger heads and as the source of materials used "
"by the builder heads. A digging machine whose builder heads are laying down "
"cobble can automatically self-replenish in this way, but note that an "
"inventory module is still required as buffer space even if the digger heads "
"produced everything needed by the builder heads in a given cycle.\n"
"\n"
"Inventory modules are not required for a digging-only machine. If there's "
"not enough storage space to hold the materials produced by the digging heads "
"the excess material will be ejected out the back of the control block. "
"They're handy for accumulating ores and other building materials, though.\n"
"\n"
"Digging machines can have multiple inventory modules added to expand their "
"capacity."
msgstr ""

#: doc.lua:41
msgid ""
"Digtron inventory modules are compatible with hoppers, adjacent hoppers will "
"add to or take from their inventories. Hoppers are not part of the Digtron "
"and will not move with it, however. They may be useful for creating a "
"\"docking station\" for a Digtron."
msgstr ""

#: doc.lua:47
msgid ""
"Inventory modules are compatible with Pipeworks blocks. When a Digtron moves "
"one of the inventory modules adjacent to a pipe it will automatically hook "
"up to it, and disconnect again when it moves on."
msgstr ""

#: doc.lua:50
msgid "Stores fuel to run a Digtron"
msgstr ""

#: doc.lua:51
msgid ""
"Digtrons have an appetite. Build operations and dig operations require a "
"certain amount of fuel, and that fuel comes from fuel hopper modules. Note "
"that movement does not require fuel, only digging and building.\n"
"\n"
"When a control unit is triggered, it will tally up how much fuel is required "
"for the next cycle and then burn items from the fuel hopper until a "
"sufficient amount of heat has been generated to power the operation. Any "
"leftover heat will be retained by the control unit for use in the next "
"cycle; this is the \"heat remaining in controller furnace\". This means you "
"don't have to worry too much about what kinds of fuel you put in the hopper, "
"none will be wasted (unless you dig away a control unit with some heat "
"remaining in it, that heat does get wasted).\n"
"\n"
"The fuel costs for digging and building can be configured in the init.lua "
"file. By default using one lump of coal as fuel a digtron can:\n"
"\tBuild 40 blocks\n"
"\tDig 40 stone blocks\n"
"\tDig 60 wood blocks\n"
"\tDig 80 dirt or sand blocks"
msgstr ""

#: doc.lua:64
msgid ""
"Digtron fuel store modules are compatible with hoppers, adjacent hoppers "
"will add to or take from their inventories. Hoppers are not part of the "
"Digtron and will not move with it, however. They may be useful for creating "
"a \"docking station\" for a Digtron."
msgstr ""

#: doc.lua:70
msgid ""
"Fuel modules are compatible with Pipeworks blocks. When a Digtron moves one "
"of the inventory modules adjacent to a pipe it will automatically hook up to "
"it, and disconnect again when it moves on."
msgstr ""

#: doc.lua:73
msgid ""
"Stores fuel for a Digtron and also has an inventory for building materials"
msgstr ""

#: doc.lua:74
msgid ""
"For smaller jobs the two dedicated modules may simply be too much of a good "
"thing, wasting precious Digtron space to give unneeded capacity. The "
"combined storage module is the best of both worlds, splitting its internal "
"space between building material inventory and fuel storage. It has 3/4 "
"building material capacity and 1/4 fuel storage capacity."
msgstr ""

#: doc.lua:79
msgid ""
"Digtron inventory modules are compatible with hoppers, adjacent hoppers will "
"add to or take from their inventories. A hopper on top of a combined "
"inventory module will insert items into its general inventory, a side hopper "
"will insert items into its fuel inventory, and a hopper on the bottom of a "
"combined inventory module will take items from its general inventory. "
"Hoppers are not part of the Digtron and will not move with it, however. They "
"may be useful for creating a \"docking station\" for a Digtron."
msgstr ""

#: doc.lua:85
msgid ""
"Combination modules are compatible with Pipeworks blocks. When a Digtron "
"moves one of the inventory modules adjacent to a pipe it will automatically "
"hook up to it, and disconnect again when it moves on. Items are extracted "
"from the \"main\" inventory, and items coming into the combination module "
"from any direction except the underside are inserted into \"main\". However, "
"a pipe entering the combination module from the underside will attempt to "
"insert items into the \"fuel\" inventory instead."
msgstr ""

#: doc.lua:90
msgid "An empty crate that a Digtron can be stored in"
msgstr ""

#: doc.lua:91
msgid ""
"Digtrons can be pushed around and rotated, and that may be enough for "
"getting them perfectly positioned for the start of a run. But once your "
"digger is a kilometer down under a shaft filled with stairs, how to get it "
"back to the surface to run another pass?\n"
"\n"
"Place an empty Digtron crate next to a Digtron and right-click it to pack "
"the Digtron (and all its inventory and settings) into the crate. You can "
"then collect the crate, bring it somewhere else, build the crate, and then "
"unpack the Digtron from it again. The Digtron will appear in the same "
"relative location and orientation to the crate as when it was packed away "
"inside it."
msgstr ""

#: doc.lua:95
msgid "A crate containing a Digtron array"
msgstr ""

#: doc.lua:96
msgid ""
"This crate contains a Digtron assembly that was stored in it earlier. Place "
"it somewhere and right-click on it to access the label text that was applied "
"to it. There's also a button that causes it to display the shape the "
"deployed Digtron would take if you unpacked the crate, marking unbuildable "
"blocks with a warning marker. And finally there's a button to actually "
"deploy the Digtron, replacing this loaded crate with an empty that can be "
"reused later."
msgstr ""

#: doc.lua:100
msgid "A basic controller to make a Digtron array move and operate."
msgstr ""

#: doc.lua:101
msgid ""
"Right-click on this module to make the digging machine go one step. The "
"digging machine will go in the direction that the control module is "
"oriented.\n"
"\n"
"A control module can only trigger once per second. Gives you time to enjoy "
"the scenery and smell the flowers (or their mulched remains, at any rate).\n"
"\n"
"If you're standing within the digging machine's volume, or in a block "
"adjacent to it, you will be pulled along with the machine when it moves."
msgstr ""

#: doc.lua:107
msgid ""
"A more sophisticated controller that includes the ability to set the number "
"of cycles it will run for, as well as diagonal movement."
msgstr ""

#: doc.lua:108
msgid ""
"An Auto-control module can be set to run for an arbitrary number of cycles. "
"Once it's running, right-click on it again to interrupt its rampage. If "
"anything interrupts it - the player's click, an undiggable obstruction, "
"running out of fuel - it will remember the number of remaining cycles so "
"that you can fix the problem and set it running again to complete the "
"original plan.\n"
"\n"
"The digging machine will go in the direction that the control module is "
"oriented.\n"
"\n"
"Auto-controllers can also be set to move diagonally by setting the \"Slope\" "
"parameter to a non-zero value. The controller will then shunt the Digtron in "
"the direction of the arrows painted on its sides every X steps it moves. The "
"Digtron will trigger dig heads when it shunts to the side, but will not "
"trigger builder modules or intermittent dig heads. The \"Offset\" setting "
"determines at what point the lateral motion will take place.\n"
"\n"
"The \"Stop block\" inventory slot in an auto-controller allows you to "
"program an auto-controller to treat certain block types as impenetrable "
"obstructions. This can allow you to fence a Digtron in with something so you "
"don't have to carefully count exactly how many steps it should take, for "
"example.\n"
"\n"
"Note that the Digtron detects an undiggable block by the item that would be "
"produced when digging it. Setting cobble as the stop block will make both "
"cobble and regular stone undiggable, but setting a block of regular stone "
"(produced from cobble in a furnace) as the stop block will *not* stop a "
"Digtron from digging regular stone (since digging regular stone produces "
"cobble, not stone)."
msgstr ""

#: doc.lua:118
msgid ""
"A simplified controller that merely moves a Digtron around without "
"triggering its builder or digger modules"
msgstr ""

#: doc.lua:119
msgid ""
"Aka the \"can you rebuild it six inches to the left\" module. This is a much "
"simplified control module that does not trigger the digger or builder heads "
"when right-clicked, it only moves the digging machine. It's up to you to "
"ensure there's space for it to move into.\n"
"\n"
"Since movement alone does not require fuel, a pusher module has no internal "
"furnace. Pushers also don't require traction, since their primary purpose is "
"repositioning Digtrons let's say they have a built-in crane or something."
msgstr ""

#: doc.lua:123
msgid "A device that allows one to rotate their Digtron into new orientations"
msgstr ""

#: doc.lua:124
msgid ""
"This magical module can rotate a Digtron array in place around itself. Right-"
"clicking on it will rotate the Digtron 90 degrees in the direction the "
"orange arrows on its sides indicate (widdershins around the Y axis by "
"default, use the screwdriver to change this) assuming there's space for the "
"Digtron in its new orientation. Builders and diggers will not trigger on "
"rotation."
msgstr ""

#: doc.lua:128
msgid "A standard Digtron digger head"
msgstr ""

#: doc.lua:129
msgid ""
"Facing of a digger head is significant; it will excavate material from the "
"block on the spinning grinder wheel face of the digger head. Generally "
"speaking, you'll want these to face forward - though having them aimed to "
"the sides can also be useful."
msgstr ""

#: doc.lua:131
msgid "Two standard Digtron digger heads merged at 90 degrees to each other"
msgstr ""

#: doc.lua:132
msgid ""
"This digger head is mainly of use when you want to build a Digtron capable "
"of digging diagonal paths. A normal one-direction dig head would be unable "
"to clear blocks in both of the directions it would be called upon to move, "
"resulting in a stuck Digtron.\n"
"\n"
"One can also make use of dual dig heads to simplify the size and layout of a "
"Digtron, though this is generally not of practical use."
msgstr ""

#: doc.lua:136
msgid ""
"Two standard soft-material Digtron digger heads merged at 90 degrees to each "
"other"
msgstr ""

#: doc.lua:137
msgid ""
"This digger head is mainly of use when you want to build a Digtron capable "
"of digging diagonal paths. A normal one-direction dig head would be unable "
"to clear blocks in both of the directions it would be called upon to move, "
"resulting in a stuck Digtron.\n"
"\n"
"Like a normal single-direction soft digger head, this digger only excavates "
"material belonging to groups softer than stone.\n"
"\n"
"One can make use of dual dig heads to simplify the size and layout of a "
"Digtron."
msgstr ""

#: doc.lua:143
msgid "A standard Digtron digger head that only triggers periodically"
msgstr ""

#: doc.lua:144
msgid ""
"This is a standard digger head capable of digging any material, but it will "
"only trigger periodically as the Digtron moves. This can be useful for "
"punching regularly-spaced holes in a tunnel wall, for example."
msgstr ""

#: doc.lua:146
msgid ""
"A standard soft-material Digtron digger head that only triggers periodically"
msgstr ""

#: doc.lua:147
msgid ""
"This is a standard soft-material digger head capable of digging any "
"material, but it will only trigger periodically as the Digtron moves. This "
"can be useful for punching regularly-spaced holes in a tunnel wall, for "
"example."
msgstr ""

#: doc.lua:149
msgid "A Digtron digger head that only excavates soft materials"
msgstr ""

#: doc.lua:150
msgid ""
"This specialized digger head is designed to excavate only softer material "
"such as sand or gravel. In technical terms, this digger digs blocks "
"belonging to the \"crumbly\", \"choppy\", \"snappy\", "
"\"oddly_diggable_by_hand\" and \"fleshy\" groups.\n"
"\n"
"The intended purpose of this digger is to be aimed at the ceiling or walls "
"of a tunnel being dug, making spaces to allow shoring blocks to be inserted "
"into unstable roofs but leaving the wall alone if it's composed of a more "
"stable material.\n"
"\n"
"It can also serve as part of a lawnmower or tree-harvester."
msgstr ""

#: doc.lua:158
msgid "Structural component for a Digtron array"
msgstr ""

#: doc.lua:159
msgid ""
"These blocks allow otherwise-disconnected sections of digtron blocks to be "
"linked together. They are not usually necessary for simple diggers but more "
"elaborate builder arrays might have builder blocks that can't be placed "
"directly adjacent to other digtron blocks and these blocks can serve to keep "
"them connected to the controller.\n"
"\n"
"They may also be used for providing additional traction if your digtron "
"array is very tall compared to the terrain surface that it's touching.\n"
"\n"
"You can also use them decoratively, or to build a platform to stand on as "
"you ride your mighty mechanical leviathan through the landscape."
msgstr ""

#: doc.lua:165
msgid "Digtron light source"
msgstr ""

#: doc.lua:166
msgid ""
"A light source that moves along with the digging machine. Convenient if "
"you're digging a tunnel that you don't intend to outfit with torches or "
"other permanent light fixtures. Not quite as bright as a torch since the "
"protective lens tends to get grimy while burrowing through the earth."
msgstr ""

#: doc.lua:168
msgid "Digtron panel"
msgstr ""

#: doc.lua:169
msgid ""
"A structural panel that can be made part of a Digtron to provide shelter for "
"an operator, keep sand out of the Digtron's innards, or just to look cool."
msgstr ""

#: doc.lua:171
msgid "Digtron edge panel"
msgstr ""

#: doc.lua:172
msgid ""
"A pair of structural panels that can be made part of a Digtron to provide "
"shelter for an operator, keep sand out of the Digtron's innards, or just to "
"look cool."
msgstr ""

#: doc.lua:174
msgid "Digtron corner panel"
msgstr ""

#: doc.lua:175
msgid ""
"A trio of structural panels that can be made part of a Digtron to provide "
"shelter for an operator, keep sand out of the Digtron's innards, or just to "
"look cool."
msgstr ""

#: doc.lua:179
msgid "Digtron"
msgstr ""

#: doc.lua:180
msgid ""
"The Digtron system is a set of blocks used to construct tunnel-boring and "
"construction machines."
msgstr ""

#: doc.lua:187
msgid "Summary"
msgstr ""

#: doc.lua:188
msgid ""
"Digtron blocks can be used to construct highly customizable and modular "
"tunnel-boring machines, bridge-builders, road-pavers, wall-o-matics, and "
"other such construction/destruction contraptions.\n"
"\n"
"The basic blocks that can be assembled into a functioning digging machine "
"are:\n"
"\n"
"* Diggers, which excavate material in front of them when the machine is "
"triggered\n"
"* Builders, which build a user-configured block in front of them\n"
"* Inventory modules, which hold material produced by the digger and provide "
"material to the builders\n"
"* Control block, used to trigger the machine and move it in a particular "
"direction.\n"
"\n"
"A digging machine's components must be connected to the control block via a "
"path leading through the faces of the blocks - diagonal connections across "
"edges and corners don't count."
msgstr ""

#: doc.lua:201
msgid "Concepts"
msgstr ""

#: doc.lua:203
msgid ""
"Several general concepts are important when building more sophisticated "
"diggers.\n"
"\n"
"Facing - a number between 0-23 that determines which direction a block is "
"facing and what orientation it has. Not all blocks make use of facing (basic "
"blocks such as cobble or sand have no facing, for example) so it's not "
"always necessary to set this when configuring a builder head. The facing of "
"already-placed blocks can be altered through the use of the screwdriver "
"tool.\n"
"\n"
"Period - Builder and digger heads can be made periodic by changing the "
"period value to something other than 1. This determines how frequently they "
"trigger. A period of 1 triggers on every block, a period of 2 triggers once "
"every second block, a period of 3 triggers once every third block, etc. "
"These are useful when setting up a machine to place regularly-spaced "
"features as it goes. For example, you could have a builder head that places "
"a torch every 8 steps, or a digger block that punches a landing in the side "
"of a vertical stairwell at every level.\n"
"\n"
"Offset - The location at which a periodic module triggers is globally "
"uniform. This is handy if you want to line up the blocks you're building "
"(for example, placing pillars and a crosspiece every 4 blocks in a tunnel, "
"or punching alcoves in a wall to place glass windows). If you wish to change "
"how the pattern lines up, modify the \"offset\" setting.\n"
"\n"
"Shift-right-clicking - since most of the blocks of the digging machine have "
"control screens associated with right-clicking, building additional blocks "
"on top of them or rotating them with the screwdriver requires the shift key "
"to be held down when right-clicking on them.\n"
"\n"
"Traction - Digtrons cannot fly. By default, they need to be touching one "
"block of solid ground for every three blocks of Digtron in order to move. "
"Digtrons can fall, though - traction is never needed when a Digtron is "
"moving downward. \"Pusher\" controllers can ignore the need for traction "
"when moving in any direction."
msgstr ""

#: doc.lua:217
msgid "Audio cues"
msgstr ""

#: doc.lua:219
msgid ""
"When a digging machine is unable to complete a cycle it will make one of "
"several noises to indicate what the problem is. It will also set its "
"mouseover text to explain what went wrong.\n"
"\n"
"Squealing traction wheels indicates a mobility problem. If the squealing is "
"accompanied by a buzzer, the digging machine has encountered an obstruction "
"it can't dig through. This could be a protected region (the digging machine "
"has only the priviledges of the player triggering it), a chest containing "
"items, or perhaps the digger was incorrectly designed and can't dig the "
"correctly sized and shaped cavity for it to move forward into. There are "
"many possibilities.\n"
"\n"
"Squealing traction wheels with no accompanying buzzer indicates that the "
"digging machine doesn't have enough solid adjacent blocks to push off of. "
"Tunnel boring machines cannot fly or swim, not even through lava, and they "
"don't dig fast enough to \"catch sick air\" when they emerge from a "
"cliffside. If you wish to cross a chasm you'll need to ensure that there are "
"builder heads placing a solid surface as you go. If you've built a very tall "
"digtron with a small surface footprint you may need to improve its traction "
"by adding structural modules that touch the ground.\n"
"\n"
"A buzzer by itself indicates that the Digtron has run out of fuel. There may "
"be traces remaining in the hopper, but they're not enough to execute the "
"next dig/build cycle.\n"
"\n"
"A ringing bell indicates that there are insufficient materials in inventory "
"to supply all the builder heads for this cycle.\n"
"\n"
"A short high-pitched honk means that one or more of the builder heads don't "
"have an item set. A common oversight, especially with large and elaborate "
"digging machines, that might be hard to notice and annoying to fix if not "
"noticed right away.\n"
"\n"
"Splashing water sounds means your Digtron is digging adjacent to (or "
"through) water-containing blocks. Digtrons are waterproof, but this might be "
"a useful indication that you should take care when installing doors in the "
"tunnel walls you've placed here.\n"
"\n"
"A triple \"voop voop voop!\" alarm indicates that there is lava adjacent to "
"your Digtron. Digtrons can't penetrate lava by default, and this alarm "
"indicates that a non-lava-proof Digtron operator may wish to exercise "
"caution when opening the door to clear the obstruction."
msgstr ""

#: doc.lua:237
msgid "Tips and Tricks"
msgstr ""

#: doc.lua:239
msgid ""
"To more easily visualize the operation of a Digtron, imagine that its cycle "
"of operation follows these steps in order:\n"
"\n"
"* Dig\n"
"* Move\n"
"* Build\n"
"* Allow dust to settle (ie, sand and gravel fall)\n"
"\n"
"If you're building a repeating pattern of blocks, your periodicity should be "
"one larger than your largest offset. For example, if you've laid out "
"builders to create a set of spiral stairs and the offsets are from 0 to 11, "
"you'll want to use periodicity 12.\n"
"\n"
"A good way to program a set of builders is to build a complete example of "
"the structure you want them to create, then place builders against the "
"structure and have them \"read\" all of its facings. This also lets you more "
"easily visualize the tricks that might be needed to allow the digtron to "
"pass through the structure as it's being built."
msgstr ""

#: node_axle.lua:6
msgid "Digtron Rotation Axle"
msgstr ""

#: node_axle.lua:57 util_execute_cycle.lua:172 util_execute_cycle.lua:365
#: util_execute_cycle.lua:454
msgid "Digtron is obstructed."
msgstr ""

#: node_builders.lua:13
msgid "Block to build"
msgstr ""

#: node_builders.lua:14 node_diggers.lua:32
msgid "Periodicity"
msgstr ""

#: node_builders.lua:15
msgid ""
"Builder will build once every n steps.\n"
"These steps are globally aligned, so all builders with the\n"
"same period and offset will build on the same location."
msgstr ""

#: node_builders.lua:16 node_controllers.lua:91 node_diggers.lua:34
msgid "Offset"
msgstr ""

#: node_builders.lua:17
msgid ""
"Offsets the start of periodicity counting by this amount.\n"
"For example, a builder with period 2 and offset 0 builds\n"
"every even-numbered block and one with period 2 and\n"
"offset 1 builds every odd-numbered block."
msgstr ""

#: node_builders.lua:18
msgid ""
"Save &\n"
"Show"
msgstr ""

#: node_builders.lua:19 node_diggers.lua:37
msgid "Saves settings"
msgstr ""

#: node_builders.lua:20
msgid "Facing"
msgstr ""

#: node_builders.lua:21
msgid ""
"Value from 0-23. Not all block types make use of this.\n"
"Use the 'Read & Save' button to copy the facing of the block\n"
"currently in the builder output location."
msgstr ""

#: node_builders.lua:22
msgid ""
"Read &\n"
"Save"
msgstr ""

#: node_builders.lua:23
msgid ""
"Reads the facing of the block currently in the build location,\n"
"then saves all settings."
msgstr ""

#: node_builders.lua:32 node_controllers.lua:106 node_crate.lua:62
#: node_diggers.lua:43
msgid "Help"
msgstr ""

#: node_builders.lua:33 node_controllers.lua:107 node_crate.lua:63
#: node_diggers.lua:44
msgid "Show documentation about this block"
msgstr ""

#: node_builders.lua:38
msgid "Digtron Builder Module"
msgstr ""

#: node_builders.lua:241 node_builders.lua:255
#, lua-format
msgid "%s uses Digtron to build %s at (%d, %d, %d), displacing %s"
msgstr ""

#: node_controllers.lua:20
msgid "Digtron Control Module"
msgstr ""

#: node_controllers.lua:48 node_controllers.lua:200 util_execute_cycle.lua:110
#: util_execute_cycle.lua:315 util_execute_cycle.lua:392
#: util_execute_cycle.lua:503
#, lua-format
msgid "Heat remaining in controller furnace: %d"
msgstr ""

#: node_controllers.lua:83
msgid "Cycles"
msgstr ""

#: node_controllers.lua:84
msgid ""
"When triggered, this controller will try to run for the given number of "
"cycles.\n"
"The cycle count will decrement as it runs, so if it gets halted by a "
"problem\n"
"you can fix the problem and restart."
msgstr ""

#: node_controllers.lua:85
msgid "Set"
msgstr ""

#: node_controllers.lua:86
msgid "Saves the cycle setting without starting the controller running"
msgstr ""

#: node_controllers.lua:87
msgid ""
"Set &\n"
"Execute"
msgstr ""

#: node_controllers.lua:88
msgid "Begins executing the given number of cycles"
msgstr ""

#: node_controllers.lua:89
msgid "Slope"
msgstr ""

#: node_controllers.lua:90
msgid ""
"For diagonal digging. After moving forward this number of nodes the auto "
"controller\n"
"will add an additional cycle moving the digtron laterally in the\n"
"direction of the arrows on the side of this controller.\n"
"Set to 0 for no lateral digging."
msgstr ""

#: node_controllers.lua:92
msgid ""
"Sets the offset of the lateral motion defined in the Slope field.\n"
"Note: this offset is relative to the controller's location.\n"
"The controller will move laterally when it reaches the indicated point."
msgstr ""

#: node_controllers.lua:93
msgid "Delay"
msgstr ""

#: node_controllers.lua:94
msgid "Number of seconds to wait between each cycle"
msgstr ""

#: node_controllers.lua:96
msgid "Stop block"
msgstr ""

#: node_controllers.lua:128 node_controllers.lua:147 node_controllers.lua:160
#, lua-format
msgid "Cycles remaining: %d"
msgstr ""

#: node_controllers.lua:128 node_controllers.lua:147
msgid "Halted!"
msgstr ""

#: node_controllers.lua:172
msgid "Digtron Automatic Control Module"
msgstr ""

#: node_controllers.lua:284
msgid "Interrupted!"
msgstr ""

#: node_controllers.lua:300
msgid "Digtron Pusher Module"
msgstr ""

#: node_crate.lua:6
msgid "Digtron Crate (Empty)"
msgstr ""

#: node_crate.lua:22
msgid "Digtron can't be packaged, it contains protected blocks"
msgstr ""

#: node_crate.lua:42 node_crate.lua:43
msgid "Crated Digtron"
msgstr ""

#: node_crate.lua:55 node_crate.lua:70
msgid "Digtron Name"
msgstr ""

#: node_crate.lua:56 node_crate.lua:71
msgid ""
"Save\n"
"Title"
msgstr ""

#: node_crate.lua:57 node_crate.lua:72
msgid "Saves the title of this Digtron"
msgstr ""

#: node_crate.lua:58 node_crate.lua:73
msgid ""
"Show\n"
"Blocks"
msgstr ""

#: node_crate.lua:59 node_crate.lua:74
msgid "Shows which blocks the packed Digtron will occupy if unpacked"
msgstr ""

#: node_crate.lua:60 node_crate.lua:75
msgid "Unpack"
msgstr ""

#: node_crate.lua:61 node_crate.lua:76
msgid "Attempts to unpack the Digtron on this location"
msgstr ""

#: node_crate.lua:80
msgid "Digtron Crate (Loaded)"
msgstr ""

#: node_crate.lua:114
msgid ""
"Unable to read layout from crate metadata, regrettably this Digtron may be "
"corrupted or lost."
msgstr ""

#: node_crate.lua:145
msgid "Unable to deploy Digtron due to protected blocks in target area"
msgstr ""

#: node_crate.lua:151
msgid "Unable to deploy Digtron due to obstruction in target area"
msgstr ""

#: node_diggers.lua:33
msgid ""
"Digger will dig once every n steps.\n"
"These steps are globally aligned, all diggers with\n"
"the same period and offset will dig on the same location."
msgstr ""

#: node_diggers.lua:35
msgid ""
"Offsets the start of periodicity counting by this amount.\n"
"For example, a digger with period 2 and offset 0 digs\n"
"every even-numbered block and one with period 2 and\n"
"offset 1 digs every odd-numbered block."
msgstr ""

#: node_diggers.lua:36
msgid "Save"
msgstr ""

#: node_diggers.lua:72
msgid "Digtron Digger Head"
msgstr ""

#: node_diggers.lua:125
msgid "Digtron Intermittent Digger Head"
msgstr ""

#: node_diggers.lua:195
msgid "Digtron Soft Material Digger Head"
msgstr ""

#: node_diggers.lua:250
msgid "Digtron Intermittent Soft Material Digger Head"
msgstr ""

#: node_diggers.lua:323
msgid "Digtron Dual Digger Head"
msgstr ""

#: node_diggers.lua:400
msgid "Digtron Dual Soft Material Digger Head"
msgstr ""

#: node_misc.lua:7
msgid "Digtron Structure"
msgstr ""

#: node_misc.lua:40
msgid "Digtron Light"
msgstr ""

#: node_misc.lua:62
msgid "Digtron Panel"
msgstr ""

#: node_misc.lua:85
msgid "Digtron Edge Panel"
msgstr ""

#: node_misc.lua:114
msgid "Digtron Corner Panel"
msgstr ""

#: node_storage.lua:8
msgid "Digtron Inventory Storage"
msgstr ""

#: node_storage.lua:34 node_storage.lua:190
msgid "Inventory items"
msgstr ""

#: node_storage.lua:77
msgid "Digtron Fuel Storage"
msgstr ""

#: node_storage.lua:103 node_storage.lua:192
msgid "Fuel items"
msgstr ""

#: node_storage.lua:166
msgid "Digtron Combined Storage"
msgstr ""

#: recipes.lua:6
msgid "Digtron Core"
msgstr ""

#: util_execute_cycle.lua:51
msgid "Digtron is adjacent to unloaded nodes."
msgstr ""

#: util_execute_cycle.lua:219
msgid "Digtron needs more fuel."
msgstr ""

#: util_execute_cycle.lua:229
msgid ""
"Digtron connected to at least one builder with no output material assigned."
msgstr ""

#: util_execute_cycle.lua:233
#, lua-format
msgid "Digtron has insufficient building materials. Needed: %s"
msgstr ""

#: util_execute_cycle.lua:302
msgid ""
"Digtron unexpectedly failed to execute one or more build operations, likely "
"due to an inventory error."
msgstr ""

#: util_execute_cycle.lua:327 util_execute_cycle.lua:515
#, lua-format
msgid "%s uses Digtron to dig %s at (%d, %d, %d)"
msgstr ""
